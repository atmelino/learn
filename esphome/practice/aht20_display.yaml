
substitutions:
  devicename: aht20_display
  friendlyname: aht20_display
  fdevicename: ""
  ip: 192.168.0.178 # For static IP adressing

  # ssid: !secret wifi_ssid
  # password: !secret wifi_password
  ssid: "TP-LINK_MR3040_4B611E"
  password: ""


esphome:
  name: ${devicename}
  friendly_name: ${friendlyname}

esp32:
  board: wemos_d1_mini32
  framework:
    type: esp-idf

preferences:
  flash_write_interval: 10min
    
wifi:
  ssid: ${ssid}
  password: ${password}
  #fast_connect: true
  #example static IP settings
  #manual_ip:
    #static_ip: ${ip}
    #gateway: 192.168.0.1
    #subnet: 255.255.255.0
    #dns1: 192.168.0.1
    #dns2: 8.8.8.8


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${fdevicename}Fallback Hotspot
    password: "esphome1"
    manual_ip:
      static_ip: 192.168.100.2
      gateway: 192.168.100.2
      subnet: 255.255.255.0
    

ota:
  - platform: esphome
    password: "esphome1"


api:
  encryption:
    key: "itqzvhZMJj8wuTJX0GTOuL/ffESFROzUlmcO0u2+sfo="  #use your own HA generated Key
  reboot_timeout: 0s
  
web_server:
  port: 80
  version: 3
  local: true
  log: true


time:
  - platform: sntp
    id: current_time

debug:
  update_interval: 1s

logger:
  level: Debug

globals:
  - id: global_var
    type: float
    restore_value: no
    initial_value: '0'

    
number:
  - platform: template
    id: set_LED_bright
    name: ${fdevicename}LED Brightness
    optimistic: true
    min_value: 0
    max_value: 100
    initial_value: '50'
    step: 1
    restore_value: true
    icon: mdi:lightbulb

  
switch:
  - platform: template
    id: auto_fan1
    name: ${fdevicename}Fan 1 Auto Mode
    restore_mode: ALWAYS_ON
    optimistic: true
    icon: mdi:fan-auto     
    turn_off_action:
      then:
        lambda: |-
          auto calla = id(fan1_speed).turn_on();
          calla.set_speed(1);
          calla.perform();
          auto callb = id(fan1_speed).turn_off();
          callb.perform();

  - platform: restart
    name: ${fdevicename}Restart
    entity_category: "CONFIG"
    icon: mdi:restart

  
output:
  - platform: ledc
    pin:
      number: GPIO2
      ignore_strapping_warning: true
    id: gpio_02


fan:
  - platform: speed
    output: gpio_02
    id: fan1_speed
    name: ${fdevicename}Fan 1 Speed
    #entity_category: "CONFIG"
    icon: mdi:fan
    restore_mode: RESTORE_DEFAULT_OFF



# Example usage in a light
light:
  - platform: monochromatic
    output: gpio_02
    name: "On Board LED"

i2c:
  - id: bus_a
    sda: GPIO21
    scl: GPIO22
    scan: True
    frequency: 400khz
  - id: bus_b
    sda: GPIO16
    scl: GPIO17
    scan: True
    frequency: 800khz

font:
#  - file: "fonts/comic-sans-ms/ComicSansMS3.ttf"
 - file: "fonts/UbuntuMono/UbuntuMono-R.ttf"
   id: small_font
   size: 12
 - file: "fonts/UbuntuMono/UbuntuMono-R.ttf"
   id: mid_font
   size: 16
 - file: "fonts/UbuntuMono/UbuntuMono-R.ttf"
   id: large_font
   size: 24

display:
 - platform: ssd1306_i2c
   i2c_id: bus_a
  #  address: 0x3D   # Sparkfun
   address: 0x3C   # Generic
   model: "SSD1306 128x64"
   id: my_display
   pages:
     - id: page1
       lambda: |-
          it.printf(0, 0*16, id(mid_font), "Temp: %.1f", id(AHT20T).state);
          it.printf(0, 1*16, id(mid_font), "Hum: %.1f", id(AHT20H).state);
          it.printf(0, 2*16, id(mid_font), "LED Bright: %.1f", id(set_LED_bright).state);
          it.printf(0, 4*12, id(mid_font), "Off %3.0fC"  , id(set_off_temp_1).state);


interval:
  - interval: 2000ms
    startup_delay: 2s
    then:
      #- display.page.show_next: my_display
      #- component.update: my_display
      # does not work : id(my_display).print(0, 0, id(small_font), "Hello");

      - lambda: !lambda |

          float actual_temp1=id(AHT20T).state;
          float fan_low_temp1=id(set_off_temp_1).state;
          float LED_brightness=id(set_LED_bright).state;
          ESP_LOGD("main", "temp= %f", actual_temp1);
          ESP_LOGD("main", "LED Brightness= %f", LED_brightness);            


sensor:

  - platform: aht10
    i2c_id: bus_b
    address: 0x38
    variant: AHT20
    temperature:
      id: AHT20T
      name: ${fdevicename}AHT20 Temp
      device_class: "TEMPERATURE"
      icon: mdi:thermometer
      filters:
      - filter_out: NaN
      - offset: -6.0
    humidity:
      name: ${fdevicename}AHT20 Humidity
      id: AHT20H
      device_class: "HUMIDITY"
      icon: mdi:water-percent
    update_interval: 2s
    
  - platform: wifi_signal
    name: ${fdevicename}WiFi
    entity_category: "DIAGNOSTIC"
    icon: mdi:wifi
    web_server:
      sorting_weight: 4
    update_interval: 30s
  
  - platform: uptime
    name: ${fdevicename}Uptime
    entity_category: "DIAGNOSTIC"
    icon: mdi:timer-sync-outline
    web_server:
      sorting_weight: 6
    update_interval: 1s

  - platform: debug
    free:
      name: ${fdevicename}Heap Free
      entity_category: "DIAGNOSTIC"
      web_server:
        sorting_weight: 9
    block:
      name: ${fdevicename}Heap Max Block
      entity_category: "DIAGNOSTIC"
      web_server:
        sorting_weight: 10
    loop_time:
      name: ${fdevicename}Loop Time
      entity_category: "DIAGNOSTIC"
      web_server:
        sorting_weight: 8

            
text_sensor:
  - platform: template
    name: ${fdevicename}Device Sensor
    entity_category: "DIAGNOSTIC"
    icon: mdi:devices
    web_server:
      sorting_weight: 14
    lambda: |-
      return {"ESP32 Control Board"};

  - platform: version
    name: ${fdevicename}Version
    entity_category: "DIAGNOSTIC"
    web_server:
      sorting_weight: 15

  - platform: wifi_info
    ip_address:
      name: ${fdevicename}IP Address
      entity_category: "DIAGNOSTIC"
      icon: mdi:ip
      web_server:
        sorting_weight: 0
    ssid:
      name: ${fdevicename}Connected SSID
      entity_category: "DIAGNOSTIC"
      icon: mdi:wifi
      web_server:
        sorting_weight: 2
    bssid:
      name: ${fdevicename}Connected BSSID
      entity_category: "DIAGNOSTIC"
      icon: mdi:wifi
      web_server:
        sorting_weight: 3
    mac_address:
      name: ${fdevicename}Mac Wifi Address
      entity_category: "DIAGNOSTIC"
      icon: mdi:wifi
      web_server:
        sorting_weight: 1

  - platform: debug
 #   device:
 #     name: ${fdevicename}Device Info
    reset_reason:
      name: ${fdevicename}Reset Reason
      entity_category: "DIAGNOSTIC"
  
